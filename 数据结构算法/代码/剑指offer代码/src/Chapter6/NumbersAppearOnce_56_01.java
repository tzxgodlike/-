package Chapter6;

public class NumbersAppearOnce_56_01 {

    /*

    一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。
    要求时间复杂度为O(n)，空间复杂度为O(1).

    1.先考虑简单的情况，如果数组中只有一个数字出现了一次而其他数都出现了两次。
    那么堆数组中的每个数都做异或运算，因为两个相同的数每一位都相同，因此他们异或值为0，
    所有最后得到的结果就是那个只出现了一次的数。

    2.现在只出现了一次的数有两个，只需要将这两个数分开，使得其中一个数在一个子数组中，
    另外一个数在另一个子数组中，再使用上面的方法即可。

    3.如何把数组分成两个部分呢？


    关键：

        就以上面的例子来说，最后会得到4和6的异或值，即100和110的异或值010（省略了前面29个0，因为int型是32位的），
        可以看到从右往左数的第2位是1，说明4和6在从右往左数的第2位不一样。在异或结果中找到第一个1的位置，
        假设是m（这说明那两个只出现了一次的数的第m位一个是1一个是0）。现在以第m位是不是1为标准将数组分成两部分，
        出现过两次的数一定会被分到同一个部分中，因为他们每一位都相同，第m位当然也相同；只出现过一次的两个数一定
        会被分到不同的部分中。

        对这两部分分别异或，每一部分就得到了那么只出现了一次的数。
     */
}
