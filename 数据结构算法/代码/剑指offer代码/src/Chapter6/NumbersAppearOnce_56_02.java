package Chapter6;

public class NumbersAppearOnce_56_02 {
/**
 * 数组中唯一出现一次的数字。
 * 在一个数组中除了一个数字只出现一次之外，其他数字都出现了三次，请找出那个只出现一次的数字
 */

/*
一个int型有32位，每一位不是0就是1。对于三个相同的数，统计每一位出现的频率，
那么每一位的频率和一定能被3整除，也就是说频率和不是3就是0。如果有多组三个相同的数，
统计的结果也是类似：频率和不是0就是3的倍数。

现在其中混进了一个只出现一次的数，没关系也统计到频率和中。如果第n位的频率和还是3的倍数，
说明只出现一次的这个数第n位是0；如果不能被3整除了，说明只出现一次的这个数第n位是1。
由此可以确定这个只出现一次的数的二进制表示，想得到十进制还不简单吗。
 */
}
